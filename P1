//El programa tarda alrededor de 100 segundos en ejecutarse
#include <stdio.h>
#include <stdlib.h>
#include <windows.h>

char mejora(char z[11], char a[11], char b[27]);
void generar(char a[11], char z[11], char z1[11], char z2[11], char z3[11], char b[27]);
void imprimir(char z1[11], char z2[11], char z3[11]);
int evaluar(char z1[11], char z2[11], char z3[11], char a[11]);

int main(){
	
	int i,j,k=0,num, eval, flag=0;
	char aux;
	char a[11] = {'h','o','l','a',' ','m','u','n','d','o',' '};
	char b[27] = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',' '};
	char z[11] = {'g','p','t','b','q','q','\0','l','m','n','a'};
	char z1[11];
	char z2[11];
	char z3[11];
	
	do{
	
	*z = mejora(z,a,b);//Sobre el mejor individuo, cambia de manera aleatoria aquellos caracteres que no sean iguales a la meta
	generar(a, z, z1, z2, z3, b);//En base al mejor individuo crea una nueva población
	imprimir(z1, z2, z3);//Vemos la población
	eval = evaluar(z1, z2, z3,a);//Evaluamos quién de la población se considera como el mejor para sobre él crear una nueva población
	
	switch(eval){
		case 0:
			for(i=0; i<11; i++){
				z[i]=z1[i];
			}
			printf("\n");	
		break;
		case 1:
			for(i=0; i<11; i++){
				z[i]=z1[i];
			}
			printf("\n");
		break;
		case 2:
			for(i=0; i<11; i++){
				z[i]=z2[i];
			}
			printf("\n");
		break;
		case 3:
			for(i=0; i<11; i++){
				z[i]=z3[i];
			}
			printf("\n");
		break;
	}
	
	//Vemos quién es el mejor individuo de la generación anterior
	printf("°Mejor individuo°\n");
	for(i=0; i<11; i++){
		printf("%c",z[i]);
	}
	printf("\n");
	
	//Comprobar si es que se llegó a la meta
	for(i=0; i<11; i++){
		if(z[i]==a[i]){
			k++;
		}
	}
	if(k==11){
		flag=1;
	}else{
		k=0;	
	}
	printf("\n");	
	}while(flag==0);

	system ("pause");
	return 0;
}

char mejora(char z[11], char a[11], char b[27]){
	int i, num, x= 500;
	char zr[11];

	for(i=0; i<11; i++){
			if(z[i] != a[i]){
				srand(time(NULL));
				Sleep(x);
				num = rand() % 28;
				z[i] = b[num];
			}
		}
	for(i=0; i<11; i++){
		zr[i]=z[i];
	}
	return *zr;
}

void generar(char a[11], char z[11], char z1[11], char z2[11], char z3[11], char b[27]){
	
	int i, num;
	for(i=0; i<11; i++){
		if(z[i] != a[i]){
			num = rand() % 28;
			z1[i] = b[num];
		}
	}
	
	for(i=0; i<11; i++){
		if(z[i] != a[i]){
			num = rand() % 28;
			z2[i] = b[num];
		}
	}
	
	for(i=0; i<11; i++){
		if(z[i] != a[i]){
			num = rand() % 28;
			z3[i] = b[num];
		}
	}	
}

void imprimir(char z1[], char z2[], char z3[]){
	int i;
	printf("°Poblaci%cn°\n",162);
	for(i=0; i<11; i++){
		printf("%c",z1[i]);
	}
	printf("\n");
	for(i=0; i<11; i++){
		printf("%c",z2[i]);
	}
	printf("\n");
	for(i=0; i<11; i++){
		printf("%c",z3[i]);
	}
	printf("\n\n");
}

int evaluar(char z1[11], char z2[11], char z3[11], char a[11]){
	
	int i, c1=0, c2=0, c3=0, b1[1][2], b2[1][2], b3[1][2], mejor[1][2];
	b1[1][2] = 1;
	b2[1][2] = 2;
	b3[1][2] = 3;
	
	for(i=0; i<11; i++){
		if(z1[i]==a[i]){
			c1++;
			b1[1][1] = c1;
		}
	}
	for(i=0; i<11; i++){
		if(z2[i]==a[i]){
			c2++;
			b2[1][1] = c2;
		}
	}
	for(i=0; i<11; i++){
		if(z3[i]==a[i]){
			c3++;
			b3[1][1] = c3;
		}
		
	}
	if(b1[1][1]==b2[1][1] && b1[1][1]==b3[1][1] && b2[1][1]==b3[1][1]){
		mejor[1][1] = 0;
		mejor[1][2] = rand() % 4;
	}else{
		if(b1[1][1]>b2[1][1]){
			if(b1[1][1]>b3[1][1]){
				mejor[1][1] = b1[1][1];
				mejor[1][2] = b1[1][2];
			}else{
				mejor[1][1] = b3[1][1];
				mejor[1][2] = b3[1][2];
			}
		}else{
			if(b2[1][1]>b3[1][1]){
				mejor[1][1] = b2[1][1];
				mejor[1][2] = b2[1][2];	
			}else{
				mejor[1][1] = b3[1][1];
				mejor[1][2] = b3[1][2];
			}	
		}			
	}
	return mejor[1][2];
}


